{"ast":null,"code":"import _classCallCheck from \"/Users/yimingshan/Workplace/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/yimingshan/Workplace/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/yimingshan/Workplace/my-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/yimingshan/Workplace/my-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/yimingshan/Workplace/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/yimingshan/Workplace/my-app/src/components/contentlist/Charts/VerticalBar/verticalBar.js\";\nimport React, { Component } from 'react';\nimport MyTemplet from '../../../templet';\nimport { XYPlot, XAxis, YAxis, HorizontalGridLines, VerticalGridLines, VerticalBarSeries } from 'react-vis';\nimport CodeBlock from '../../../';\nimport ReactMarkdown from 'react-markdown';\n\nvar MyVerticalBar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MyVerticalBar, _Component);\n\n  function MyVerticalBar() {\n    _classCallCheck(this, MyVerticalBar);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MyVerticalBar).apply(this, arguments));\n  }\n\n  _createClass(MyVerticalBar, [{\n    key: \"renderBar\",\n    value: function renderBar() {\n      var data1 = [{\n        x: 'A',\n        y: 10\n      }, {\n        x: 'B',\n        y: 15\n      }, {\n        x: 'C',\n        y: 20\n      }, {\n        x: 'D',\n        y: 25\n      }, {\n        x: 'E',\n        y: 30\n      }];\n      var data2 = [{\n        x: 'F',\n        y: 25\n      }, {\n        x: 'G',\n        y: 20\n      }, {\n        x: 'H',\n        y: 15\n      }, {\n        x: 'I',\n        y: 10\n      }, {\n        x: 'J',\n        y: 5\n      }];\n      return React.createElement(\"div\", {\n        className: \"bar-display\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(XYPlot, {\n        margin: {\n          left: 70,\n          top: 20\n        },\n        xType: \"ordinal\",\n        width: 700,\n        height: 700,\n        yDomain: [0, 30],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(VerticalGridLines, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }), React.createElement(HorizontalGridLines, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }), React.createElement(XAxis, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }), React.createElement(YAxis, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }), React.createElement(VerticalBarSeries, {\n        data: data1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }), React.createElement(VerticalBarSeries, {\n        data: data2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var output = this.renderBar();\n      var myName = \"Bar\";\n      var string = \"\\n    import {XYPlot, XAxis, YAxis, HorizontalGridLines, VerticalGridLines,VerticalBarSeries} from 'react-vis';\\n\\n    const data1 = [\\n      {x: 'Apple', y: 10},\\n      {x: 'Banana', y: 12},\\n      {x: 'Orange', y: 4},\\n    ];\\n\\n    const data2 = [\\n      {x: 'Apple', y: 18},\\n      {x: 'Banana', y: 15},\\n      {x: 'Orange', y: 7},\\n    ];\\n\\n    return (\\n      <XYPlot margin={{left: 70}} xType=\\\"ordinal\\\" width={500} height={500} yDomain={[0, 30]}>\\n        <VerticalGridLines />\\n        <HorizontalGridLines />\\n        <XAxis  />\\n        <YAxis />\\n        <VerticalBarSeries\\n          data={data1}\\n        />\\n        <VerticalBarSeries\\n          data={data2}\\n        />\\n      </XYPlot>\\n    )\\n    \";\n      var code = React.createElement(ReactMarkdown, {\n        source: string,\n        renderers: {\n          code: CodeBlock\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(MyTemplet, {\n        content: output,\n        name: myName,\n        sampleUsage: code,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return MyVerticalBar;\n}(Component);\n\nexport default MyVerticalBar;","map":{"version":3,"sources":["/Users/yimingshan/Workplace/my-app/src/components/contentlist/Charts/VerticalBar/verticalBar.js"],"names":["React","Component","MyTemplet","XYPlot","XAxis","YAxis","HorizontalGridLines","VerticalGridLines","VerticalBarSeries","CodeBlock","ReactMarkdown","MyVerticalBar","data1","x","y","data2","left","top","output","renderBar","myName","string","code"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAuB,kBAAvB;AACA,SAAQC,MAAR,EAAgBC,KAAhB,EAAuBC,KAAvB,EAA8BC,mBAA9B,EAAmDC,iBAAnD,EAAqEC,iBAArE,QAA6F,WAA7F;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;;IACMC,a;;;;;;;;;;;;;gCAIJ;AACE,UAAMC,KAAK,GAAG,CACZ;AAACC,QAAAA,CAAC,EAAE,GAAJ;AAASC,QAAAA,CAAC,EAAE;AAAZ,OADY,EAEZ;AAACD,QAAAA,CAAC,EAAE,GAAJ;AAASC,QAAAA,CAAC,EAAE;AAAZ,OAFY,EAGZ;AAACD,QAAAA,CAAC,EAAE,GAAJ;AAASC,QAAAA,CAAC,EAAE;AAAZ,OAHY,EAIZ;AAACD,QAAAA,CAAC,EAAE,GAAJ;AAASC,QAAAA,CAAC,EAAE;AAAZ,OAJY,EAKZ;AAACD,QAAAA,CAAC,EAAE,GAAJ;AAASC,QAAAA,CAAC,EAAE;AAAZ,OALY,CAAd;AAQA,UAAMC,KAAK,GAAG,CACZ;AAACF,QAAAA,CAAC,EAAE,GAAJ;AAASC,QAAAA,CAAC,EAAE;AAAZ,OADY,EAEZ;AAACD,QAAAA,CAAC,EAAE,GAAJ;AAASC,QAAAA,CAAC,EAAE;AAAZ,OAFY,EAGZ;AAACD,QAAAA,CAAC,EAAE,GAAJ;AAASC,QAAAA,CAAC,EAAE;AAAZ,OAHY,EAIZ;AAACD,QAAAA,CAAC,EAAE,GAAJ;AAASC,QAAAA,CAAC,EAAE;AAAZ,OAJY,EAKZ;AAACD,QAAAA,CAAC,EAAE,GAAJ;AAASC,QAAAA,CAAC,EAAE;AAAZ,OALY,CAAd;AAQA,aACE;AAAK,QAAA,SAAS,EAAG,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,MAAM,EAAE;AAACE,UAAAA,IAAI,EAAE,EAAP;AAAWC,UAAAA,GAAG,EAAE;AAAhB,SAAhB;AAAqC,QAAA,KAAK,EAAC,SAA3C;AAAqD,QAAA,KAAK,EAAE,GAA5D;AAAiE,QAAA,MAAM,EAAE,GAAzE;AAA8E,QAAA,OAAO,EAAE,CAAC,CAAD,EAAI,EAAJ,CAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,EAIE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,EAKE,oBAAC,iBAAD;AACE,QAAA,IAAI,EAAEL,KADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,EAQE,oBAAC,iBAAD;AACE,QAAA,IAAI,EAAEG,KADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARF,CADF,CADF;AAgBD;;;6BAED;AACE,UAAIG,MAAM,GAAG,KAAKC,SAAL,EAAb;AACA,UAAIC,MAAM,GAAG,KAAb;AACA,UAAIC,MAAM,ktBAAV;AA8BA,UAAIC,IAAI,GAAI,oBAAC,aAAD;AAAe,QAAA,MAAM,EAAED,MAAvB;AAA+B,QAAA,SAAS,EAAE;AAAEC,UAAAA,IAAI,EAAEb;AAAR,SAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAZ;AACA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,SAAD;AAAW,QAAA,OAAO,EAAIS,MAAtB;AAA8B,QAAA,IAAI,EAAIE,MAAtC;AAA8C,QAAA,WAAW,EAAIE,IAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CADF;AAKD;;;;EA9EyBrB,S;;AAiF5B,eAAeU,aAAf","sourcesContent":["import React, { Component } from 'react';\nimport MyTemplet  from '../../../templet';\nimport {XYPlot, XAxis, YAxis, HorizontalGridLines, VerticalGridLines,VerticalBarSeries} from 'react-vis';\nimport CodeBlock from '../../../';\nimport ReactMarkdown from 'react-markdown';\nclass MyVerticalBar extends Component\n{\n\n  renderBar()\n  {\n    const data1 = [\n      {x: 'A', y: 10},\n      {x: 'B', y: 15},\n      {x: 'C', y: 20},\n      {x: 'D', y: 25},\n      {x: 'E', y: 30}\n    ];\n\n    const data2 = [\n      {x: 'F', y: 25},\n      {x: 'G', y: 20},\n      {x: 'H', y: 15},\n      {x: 'I', y: 10},\n      {x: 'J', y: 5}\n    ];\n\n    return (\n      <div className = \"bar-display\">\n        <XYPlot margin={{left: 70, top: 20}} xType=\"ordinal\" width={700} height={700} yDomain={[0, 30]}>\n          <VerticalGridLines />\n          <HorizontalGridLines />\n          <XAxis  />\n          <YAxis />\n          <VerticalBarSeries\n            data={data1}\n          />\n          <VerticalBarSeries\n            data={data2}\n          />\n        </XYPlot>\n      </div>\n    );\n  }\n  render()\n  {\n    let output = this.renderBar();\n    let myName = \"Bar\";\n    let string = `\n    import {XYPlot, XAxis, YAxis, HorizontalGridLines, VerticalGridLines,VerticalBarSeries} from 'react-vis';\n\n    const data1 = [\n      {x: 'Apple', y: 10},\n      {x: 'Banana', y: 12},\n      {x: 'Orange', y: 4},\n    ];\n\n    const data2 = [\n      {x: 'Apple', y: 18},\n      {x: 'Banana', y: 15},\n      {x: 'Orange', y: 7},\n    ];\n\n    return (\n      <XYPlot margin={{left: 70}} xType=\"ordinal\" width={500} height={500} yDomain={[0, 30]}>\n        <VerticalGridLines />\n        <HorizontalGridLines />\n        <XAxis  />\n        <YAxis />\n        <VerticalBarSeries\n          data={data1}\n        />\n        <VerticalBarSeries\n          data={data2}\n        />\n      </XYPlot>\n    )\n    `;\n    let code = (<ReactMarkdown source={string} renderers={{ code: CodeBlock }}/>);\n    return(\n      <div>\n      <MyTemplet content = {output} name = {myName} sampleUsage = {code}/>\n      </div>\n    );\n  }\n}\n\nexport default MyVerticalBar;\n"]},"metadata":{},"sourceType":"module"}