{"ast":null,"code":"import _classCallCheck from \"/Users/yimingshan/Workplace/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/yimingshan/Workplace/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/yimingshan/Workplace/my-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/yimingshan/Workplace/my-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/yimingshan/Workplace/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/yimingshan/Workplace/my-app/src/components/contentlist/Charts/LineMark/lineMark.js\";\nimport React, { Component } from 'react';\nimport MyTemplet from '../../../templet';\nimport { XYPlot, XAxis, YAxis, HorizontalGridLines, LineMarkSeries, VerticalGridLines } from 'react-vis';\nimport CodeBlock from '../../../';\nimport ReactMarkdown from 'react-markdown';\n\nvar MyLineMark =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MyLineMark, _Component);\n\n  function MyLineMark() {\n    _classCallCheck(this, MyLineMark);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MyLineMark).apply(this, arguments));\n  }\n\n  _createClass(MyLineMark, [{\n    key: \"renderLineMark\",\n    value: function renderLineMark() {\n      var data1 = [{\n        x: 0,\n        y: 4\n      }, {\n        x: 1,\n        y: 15\n      }, {\n        x: 2,\n        y: 7\n      }, {\n        x: 3,\n        y: 5\n      }, {\n        x: 4,\n        y: 3\n      }, {\n        x: 5,\n        y: 9\n      }, {\n        x: 6,\n        y: 18\n      }, {\n        x: 7,\n        y: 13\n      }, {\n        x: 8,\n        y: 10\n      }, {\n        x: 9,\n        y: 4\n      }, {\n        x: 10,\n        y: 0\n      }, {\n        x: 11,\n        y: 17\n      }, {\n        x: 12,\n        y: 22\n      }, {\n        x: 13,\n        y: 25\n      }, {\n        x: 14,\n        y: 20\n      }, {\n        x: 15,\n        y: 12\n      }];\n      var data2 = [{\n        x: 0,\n        y: 10\n      }, {\n        x: 1,\n        y: 11\n      }, {\n        x: 2,\n        y: 8\n      }, {\n        x: 3,\n        y: 9\n      }, {\n        x: 4,\n        y: 6\n      }, {\n        x: 5,\n        y: 18\n      }, {\n        x: 6,\n        y: 8\n      }, {\n        x: 7,\n        y: 20\n      }, {\n        x: 8,\n        y: 6\n      }, {\n        x: 9,\n        y: 0\n      }, {\n        x: 10,\n        y: 22\n      }, {\n        x: 11,\n        y: 11\n      }, {\n        x: 12,\n        y: 25\n      }, {\n        x: 13,\n        y: 16\n      }, {\n        x: 14,\n        y: 15\n      }, {\n        x: 15,\n        y: 14\n      }];\n      return React.createElement(\"div\", {\n        className: \"lineMark-display\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(XYPlot, {\n        margin: {\n          Bottom: 20,\n          top: 30\n        },\n        xDomain: [0, 16],\n        yDomain: [0, 26],\n        width: 700,\n        height: 700,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(VerticalGridLines, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), React.createElement(HorizontalGridLines, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }), React.createElement(XAxis, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), React.createElement(YAxis, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }), React.createElement(LineMarkSeries, {\n        className: \"linemark-series-example\",\n        style: {\n          strokeWidth: '3px'\n        },\n        lineStyle: {\n          stroke: 'red'\n        },\n        markStyle: {\n          stroke: 'blue'\n        },\n        data: data1,\n        curve: 'curveMonotoneX',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), React.createElement(LineMarkSeries, {\n        className: \"linemark-series-example-2\",\n        style: {\n          strokeWidth: '3px'\n        },\n        lineStyle: {\n          stroke: 'blue'\n        },\n        markStyle: {\n          stroke: 'red'\n        },\n        curve: 'curveMonotoneX',\n        data: data2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var output = this.renderLineMark();\n      var myName = \"LineMark\";\n      var string = \"\\n    import {XYPlot, XAxis, YAxis, HorizontalGridLines, LineMarkSeries, VerticalGridLines} from 'react-vis';\\n\\n    renderLineMark()\\n    {\\n      const data1 = [\\n        {x: 0, y: 4},\\n        {x: 1, y: 18},\\n        {x: 2, y: 2},\\n        {x: 3, y: 9},\\n      ];\\n      const data2 = [\\n        {x: 0, y: 10},\\n        {x: 1, y: 6},\\n        {x: 2, y: 2},\\n        {x: 3, y: 0},\\n      ];\\n      return (\\n        <div>\\n          <XYPlot width={300} height={300}>\\n          <VerticalGridLines />\\n          <HorizontalGridLines />\\n          <XAxis />\\n          <YAxis />\\n          <LineMarkSeries\\n            className=\\\"linemark-series-example\\\"\\n            data={data1}\\n          />\\n          <LineMarkSeries\\n            className=\\\"linemark-series-example-2\\\"\\n            data={data2}\\n          />\\n        </XYPlot>\\n      <div>\\n      );\";\n      var code = React.createElement(ReactMarkdown, {\n        source: string,\n        renderers: {\n          code: CodeBlock\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(MyTemplet, {\n        content: output,\n        name: myName,\n        sampleUsage: code,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return MyLineMark;\n}(Component);\n\nexport default MyLineMark;","map":{"version":3,"sources":["/Users/yimingshan/Workplace/my-app/src/components/contentlist/Charts/LineMark/lineMark.js"],"names":["React","Component","MyTemplet","XYPlot","XAxis","YAxis","HorizontalGridLines","LineMarkSeries","VerticalGridLines","CodeBlock","ReactMarkdown","MyLineMark","data1","x","y","data2","Bottom","top","strokeWidth","stroke","output","renderLineMark","myName","string","code"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport MyTemplet  from '../../../templet';\nimport {XYPlot, XAxis, YAxis, HorizontalGridLines, LineMarkSeries, VerticalGridLines} from 'react-vis';\nimport CodeBlock from '../../../';\nimport ReactMarkdown from 'react-markdown';\n\nclass MyLineMark extends Component\n{\n\n  renderLineMark()\n  {\n    const data1 = [\n      {x: 0, y: 4},\n      {x: 1, y: 15},\n      {x: 2, y: 7},\n      {x: 3, y: 5},\n      {x: 4, y: 3},\n      {x: 5, y: 9},\n      {x: 6, y: 18},\n      {x: 7, y: 13},\n      {x: 8, y: 10},\n      {x: 9, y: 4},\n      {x: 10, y: 0},\n      {x: 11, y: 17},\n      {x: 12, y: 22},\n      {x: 13, y: 25},\n      {x: 14, y: 20},\n      {x: 15, y: 12}\n    ];\n    const data2 = [\n      {x: 0, y: 10},\n      {x: 1, y: 11},\n      {x: 2, y: 8},\n      {x: 3, y: 9},\n      {x: 4, y: 6},\n      {x: 5, y: 18},\n      {x: 6, y: 8},\n      {x: 7, y: 20},\n      {x: 8, y: 6},\n      {x: 9, y: 0},\n      {x: 10, y: 22},\n      {x: 11, y: 11},\n      {x: 12, y: 25},\n      {x: 13, y: 16},\n      {x: 14, y: 15},\n      {x: 15, y: 14}\n    ];\n    return (\n      <div className = \"lineMark-display\">\n        <XYPlot margin={{Bottom: 20, top: 30}} xDomain={[0, 16]} yDomain={[0, 26]} width={700} height={700}>\n        <VerticalGridLines/>\n        <HorizontalGridLines/>\n        <XAxis />\n        <YAxis />\n        <LineMarkSeries\n          className=\"linemark-series-example\"\n          style={{\n            strokeWidth: '3px'\n          }}\n          lineStyle={{stroke: 'red'}}\n          markStyle={{stroke: 'blue'}}\n          data={data1}\n          curve={'curveMonotoneX'}\n        />\n        <LineMarkSeries\n          className=\"linemark-series-example-2\"\n          style={{\n            strokeWidth: '3px'\n          }}\n          lineStyle={{stroke: 'blue'}}\n          markStyle={{stroke: 'red'}}\n          curve={'curveMonotoneX'}\n          data={data2}\n        />\n      </XYPlot>\n    </div>\n    );\n  }\n  render()\n  {\n    let output = this.renderLineMark();\n    let myName = \"LineMark\";\n    let string = `\n    import {XYPlot, XAxis, YAxis, HorizontalGridLines, LineMarkSeries, VerticalGridLines} from 'react-vis';\n\n    renderLineMark()\n    {\n      const data1 = [\n        {x: 0, y: 4},\n        {x: 1, y: 18},\n        {x: 2, y: 2},\n        {x: 3, y: 9},\n      ];\n      const data2 = [\n        {x: 0, y: 10},\n        {x: 1, y: 6},\n        {x: 2, y: 2},\n        {x: 3, y: 0},\n      ];\n      return (\n        <div>\n          <XYPlot width={300} height={300}>\n          <VerticalGridLines />\n          <HorizontalGridLines />\n          <XAxis />\n          <YAxis />\n          <LineMarkSeries\n            className=\"linemark-series-example\"\n            data={data1}\n          />\n          <LineMarkSeries\n            className=\"linemark-series-example-2\"\n            data={data2}\n          />\n        </XYPlot>\n      <div>\n      );`;\n    let code = (<ReactMarkdown source={string} renderers={{ code: CodeBlock }}/>);\n    return(\n      <div>\n      <MyTemplet content = {output} name = {myName} sampleUsage = {code}/>\n      </div>\n    );\n  }\n}\n\nexport default MyLineMark;\n"]},"metadata":{},"sourceType":"module"}