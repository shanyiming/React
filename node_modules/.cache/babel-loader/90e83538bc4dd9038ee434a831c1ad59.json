{"ast":null,"code":"import _classCallCheck from \"/Users/yimingshan/Workplace/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/yimingshan/Workplace/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/yimingshan/Workplace/my-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/yimingshan/Workplace/my-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/yimingshan/Workplace/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/yimingshan/Workplace/my-app/src/components/contentlist/Charts/Heatmap/heatmap.js\";\nimport React, { Component } from 'react';\nimport MyTemplete from '../../../templete';\nimport { XYPlot, XAxis, YAxis, HeatmapSeries, Hint } from 'react-vis';\nimport CodeBlock from '../../../';\nimport ReactMarkdown from 'react-markdown';\n\nvar MyHeatmap =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MyHeatmap, _Component);\n\n  function MyHeatmap() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MyHeatmap);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MyHeatmap)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      value: false\n    };\n    return _this;\n  }\n\n  _createClass(MyHeatmap, [{\n    key: \"renderHeat\",\n    value: function renderHeat() {\n      var _this2 = this;\n\n      var value = this.state.value;\n      var data = [{\n        x: 1,\n        y: 0,\n        color: 10\n      }, {\n        x: 1,\n        y: 5,\n        color: 8\n      }, {\n        x: 1,\n        y: 10,\n        color: 6\n      }, {\n        x: 1,\n        y: 15,\n        color: 7\n      }, {\n        x: 1,\n        y: 20,\n        color: 3\n      }, {\n        x: 2,\n        y: 0,\n        color: 12\n      }, {\n        x: 2,\n        y: 5,\n        color: 2\n      }, {\n        x: 2,\n        y: 10,\n        color: 1\n      }, {\n        x: 2,\n        y: 15,\n        color: 5\n      }, {\n        x: 2,\n        y: 20,\n        color: 10\n      }, {\n        x: 3,\n        y: 0,\n        color: 9\n      }, {\n        x: 3,\n        y: 5,\n        color: 2\n      }, {\n        x: 3,\n        y: 10,\n        color: 6\n      }, {\n        x: 3,\n        y: 15,\n        color: 12\n      }, {\n        x: 3,\n        y: 20,\n        color: 12\n      }];\n      return React.createElement(\"div\", {\n        className: \"circular-display\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(XYPlot, {\n        width: 700,\n        height: 700,\n        margin: {\n          Bottom: 20,\n          top: 35\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(XAxis, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }), React.createElement(YAxis, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }), React.createElement(HeatmapSeries, {\n        colorRange: [\"red\", \"orange\"],\n        onValueMouseOver: function onValueMouseOver(v) {\n          return _this2.setState({\n            value: v\n          });\n        },\n        onSeriesMouseOut: function onSeriesMouseOut(v) {\n          return _this2.setState({\n            value: false\n          });\n        },\n        data: data,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }), value !== false && React.createElement(Hint, {\n        value: value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var output = this.renderHeat();\n      var myName = \"Heatmap\";\n      var string = \"\\n    import {XYPlot, XAxis, YAxis, HeatmapSeries} from 'react-vis';\\n\\n    renderHeat()\\n    {\\n      const data = [\\n        {x: 1, y: 0, color: 10},\\n        {x: 1, y: 5, color: 8},\\n        {x: 2, y: 10, color: 1},\\n        {x: 2, y: 15, color: 5},\\n        {x: 3, y: 10, color: 6},\\n        {x: 3, y: 15, color: 12},\\n      ];\\n\\n      return (\\n        <div>\\n        <XYPlot width={300} height={300}>\\n        <XAxis />\\n        <YAxis />\\n        <HeatmapSeries\\n          colorRange={[\\\"blue\\\", \\\"green\\\"]}\\n          data={data}\\n        />\\n      </XYPlot>\\n        </div>\\n      );\\n    }\\n    \";\n      var code = React.createElement(ReactMarkdown, {\n        source: string,\n        renderers: {\n          code: CodeBlock\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(MyTemplete, {\n        content: output,\n        name: myName,\n        sampleUsage: code,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return MyHeatmap;\n}(Component);\n\nexport default MyHeatmap;","map":{"version":3,"sources":["/Users/yimingshan/Workplace/my-app/src/components/contentlist/Charts/Heatmap/heatmap.js"],"names":["React","Component","MyTemplete","XYPlot","XAxis","YAxis","HeatmapSeries","Hint","CodeBlock","ReactMarkdown","MyHeatmap","state","value","data","x","y","color","Bottom","top","v","setState","output","renderHeat","myName","string","code"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport MyTemplete  from '../../../templete';\nimport {XYPlot, XAxis, YAxis, HeatmapSeries, Hint} from 'react-vis';\nimport CodeBlock from '../../../';\nimport ReactMarkdown from 'react-markdown';\n\nclass MyHeatmap extends Component\n{\n  state = {\n    value: false\n  };\n  renderHeat()\n  {\n    const {value} = this.state;\n    const data = [\n      {x: 1, y: 0, color: 10},\n      {x: 1, y: 5, color: 8},\n      {x: 1, y: 10, color: 6},\n      {x: 1, y: 15, color: 7},\n      {x: 1, y: 20, color: 3},\n      {x: 2, y: 0, color: 12},\n      {x: 2, y: 5, color: 2},\n      {x: 2, y: 10, color: 1},\n      {x: 2, y: 15, color: 5},\n      {x: 2, y: 20, color: 10},\n      {x: 3, y: 0, color: 9},\n      {x: 3, y: 5, color: 2},\n      {x: 3, y: 10, color: 6},\n      {x: 3, y: 15, color: 12},\n      {x: 3, y: 20, color: 12}\n    ];\n\n    return (\n      <div className = \"circular-display\">\n      <XYPlot width={700} height={700} margin={{Bottom: 20, top: 35}}>\n      <XAxis />\n      <YAxis />\n      <HeatmapSeries\n        colorRange={[\"red\", \"orange\"]}\n        onValueMouseOver={v => this.setState({value: v})}\n        onSeriesMouseOut={v => this.setState({value: false})}\n        data={data}\n      />\n      {value !== false && <Hint value={value} />}\n    </XYPlot>\n      </div>\n    );\n  }\n  render()\n  {\n    let output = this.renderHeat();\n    let myName = \"Heatmap\";\n    let string = `\n    import {XYPlot, XAxis, YAxis, HeatmapSeries} from 'react-vis';\n\n    renderHeat()\n    {\n      const data = [\n        {x: 1, y: 0, color: 10},\n        {x: 1, y: 5, color: 8},\n        {x: 2, y: 10, color: 1},\n        {x: 2, y: 15, color: 5},\n        {x: 3, y: 10, color: 6},\n        {x: 3, y: 15, color: 12},\n      ];\n\n      return (\n        <div>\n        <XYPlot width={300} height={300}>\n        <XAxis />\n        <YAxis />\n        <HeatmapSeries\n          colorRange={[\"blue\", \"green\"]}\n          data={data}\n        />\n      </XYPlot>\n        </div>\n      );\n    }\n    `;\n    let code = (<ReactMarkdown source={string} renderers={{ code: CodeBlock }}/>);\n    return(\n      <div>\n      <MyTemplete content = {output} name = {myName} sampleUsage = {code}/>\n      </div>\n    );\n  }\n}\n\nexport default MyHeatmap;\n"]},"metadata":{},"sourceType":"module"}