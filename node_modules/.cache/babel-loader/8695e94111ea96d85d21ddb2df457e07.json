{"ast":null,"code":"import _classCallCheck from \"/Users/yimingshan/Workplace/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/yimingshan/Workplace/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/yimingshan/Workplace/my-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/yimingshan/Workplace/my-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/yimingshan/Workplace/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/yimingshan/Workplace/my-app/src/components/contentlist/Charts/Line/line.js\";\nimport React, { Component } from 'react';\nimport MyTemplet from '../../../templet';\nimport { XYPlot, XAxis, YAxis, HorizontalGridLines, LineSeries, VerticalGridLines } from 'react-vis';\nimport CodeBlock from '../../../';\nimport ReactMarkdown from 'react-markdown';\n\nvar MyLine =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MyLine, _Component);\n\n  function MyLine() {\n    _classCallCheck(this, MyLine);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MyLine).apply(this, arguments));\n  }\n\n  _createClass(MyLine, [{\n    key: \"renderLine\",\n    value: function renderLine() {\n      var data = [{\n        x: 0,\n        y: 8\n      }, {\n        x: 1,\n        y: 2\n      }, {\n        x: 2,\n        y: 4\n      }, {\n        x: 3,\n        y: 9\n      }, {\n        x: 4,\n        y: 6\n      }, {\n        x: 5,\n        y: 7\n      }, {\n        x: 6,\n        y: 0\n      }, {\n        x: 7,\n        y: 3\n      }, {\n        x: 8,\n        y: 2\n      }, {\n        x: 9,\n        y: 0\n      }, {\n        x: 10,\n        y: 3\n      }, {\n        x: 11,\n        y: 11\n      }, {\n        x: 12,\n        y: 5\n      }, {\n        x: 13,\n        y: 7\n      }, {\n        x: 14,\n        y: 1\n      }, {\n        x: 15,\n        y: 3\n      }];\n      return React.createElement(\"div\", {\n        className: \"line-display\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(XYPlot, {\n        margin: {\n          Bottom: 20,\n          top: 30\n        },\n        height: 700,\n        width: 700,\n        yDomain: [0, 12],\n        xDomain: [0, 16],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(VerticalGridLines, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }), React.createElement(HorizontalGridLines, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }), React.createElement(XAxis, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }), React.createElement(YAxis, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }), React.createElement(LineSeries, {\n        data: data,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var output = this.renderLine();\n      var myName = \"Line\";\n      var string = \"\\n    import {XYPlot, XAxis, YAxis, HorizontalGridLines, LineSeries, VerticalGridLines} from 'react-vis';\\n\\n    const data = [\\n      {x: 0, y: 8},\\n      {x: 1, y: 5},\\n      {x: 2, y: 4},\\n      {x: 3, y: 9},\\n      {x: 4, y: 1},\\n      {x: 5, y: 7},\\n      {x: 6, y: 6},\\n      {x: 7, y: 3},\\n      {x: 8, y: 2},\\n      {x: 9, y: 0}\\n    ];\\n    return (\\n      <div>\\n        <XYPlot height={500} width= {500}>\\n          <VerticalGridLines />\\n          <HorizontalGridLines />\\n          <XAxis />\\n          <YAxis />\\n          <LineSeries data={data} />\\n        </XYPlot>\\n      </div>\\n    );\";\n      var code = React.createElement(ReactMarkdown, {\n        source: string,\n        renderers: {\n          code: CodeBlock\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(MyTemplet, {\n        content: output,\n        name: myName,\n        sampleUsage: code,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return MyLine;\n}(Component);\n\nexport default MyLine;","map":{"version":3,"sources":["/Users/yimingshan/Workplace/my-app/src/components/contentlist/Charts/Line/line.js"],"names":["React","Component","MyTemplet","XYPlot","XAxis","YAxis","HorizontalGridLines","LineSeries","VerticalGridLines","CodeBlock","ReactMarkdown","MyLine","data","x","y","Bottom","top","output","renderLine","myName","string","code"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport MyTemplet  from '../../../templet';\nimport {XYPlot, XAxis, YAxis, HorizontalGridLines, LineSeries, VerticalGridLines} from 'react-vis';\nimport CodeBlock from '../../../';\nimport ReactMarkdown from 'react-markdown';\n\nclass MyLine extends Component\n{\n\n  renderLine()\n  {\n    const data = [\n      {x: 0, y: 8},\n      {x: 1, y: 2},\n      {x: 2, y: 4},\n      {x: 3, y: 9},\n      {x: 4, y: 6},\n      {x: 5, y: 7},\n      {x: 6, y: 0},\n      {x: 7, y: 3},\n      {x: 8, y: 2},\n      {x: 9, y: 0},\n      {x: 10, y: 3},\n      {x: 11, y: 11},\n      {x: 12, y: 5},\n      {x: 13, y: 7},\n      {x: 14, y: 1},\n      {x: 15, y: 3}\n    ];\n    return (\n      <div className = \"line-display\">\n        <XYPlot margin={{Bottom: 20, top: 30}} height={700} width= {700} yDomain={[0, 12]} xDomain={[0, 16]}>\n          <VerticalGridLines />\n          <HorizontalGridLines />\n          <XAxis />\n          <YAxis />\n          <LineSeries data={data} />\n        </XYPlot>\n      </div>\n    );\n  }\n  render()\n  {\n    let output = this.renderLine();\n    let myName = \"Line\";\n    let string = `\n    import {XYPlot, XAxis, YAxis, HorizontalGridLines, LineSeries, VerticalGridLines} from 'react-vis';\n\n    const data = [\n      {x: 0, y: 8},\n      {x: 1, y: 5},\n      {x: 2, y: 4},\n      {x: 3, y: 9},\n      {x: 4, y: 1},\n      {x: 5, y: 7},\n      {x: 6, y: 6},\n      {x: 7, y: 3},\n      {x: 8, y: 2},\n      {x: 9, y: 0}\n    ];\n    return (\n      <div>\n        <XYPlot height={500} width= {500}>\n          <VerticalGridLines />\n          <HorizontalGridLines />\n          <XAxis />\n          <YAxis />\n          <LineSeries data={data} />\n        </XYPlot>\n      </div>\n    );`;\n    let code = (<ReactMarkdown source={string} renderers={{ code: CodeBlock }}/>);\n    return(\n      <div>\n      <MyTemplet content = {output} name = {myName} sampleUsage = {code}/>\n      </div>\n    );\n  }\n}\n\nexport default MyLine;\n"]},"metadata":{},"sourceType":"module"}