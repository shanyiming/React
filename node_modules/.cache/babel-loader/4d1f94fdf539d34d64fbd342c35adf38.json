{"ast":null,"code":"var _jsxFileName = \"/Users/yimingshan/Workplace/my-app/src/components/contentlist/Components/Chips/chips.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport Chip from '@material-ui/core/Chip';\nimport CodeBlock from '../../../';\nimport ReactMarkdown from 'react-markdown';\nimport MyTemplet from '../../../templet';\nimport * as Icons from '@material-ui/icons';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      marginTop: 50,\n      marginBottom: 50,\n      display: 'flex',\n      justifyContent: 'center',\n      flexWrap: 'wrap'\n    },\n    chip1: {\n      margin: theme.spacing.unit,\n      backgroundColor: \"#002f6c\"\n    },\n    chip: {\n      margin: theme.spacing.unit\n    }\n  };\n};\n\nfunction handleClick() {\n  alert('Hi');\n}\n\nfunction MyChips(props) {\n  var classes = props.classes;\n  var BlueToothIcon = Icons['BluetoothDisabledTwoTone'];\n  var output = React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(Chip, {\n    label: \"Chip\",\n    className: classes.chip1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(Chip, {\n    avatar: React.createElement(Avatar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Hi\"),\n    label: \"Hi\",\n    onClick: handleClick,\n    className: classes.chip,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(Chip, {\n    icon: React.createElement(BlueToothIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }),\n    label: \"Bluetooth\",\n    className: classes.chip,\n    color: \"#002f6c\",\n    onClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }));\n  var myName = \"Chips\";\n  var string = \"\\n\\n    import Avatar from '@material-ui/core/Avatar';\\n    import Chip from '@material-ui/core/Chip';\\n    return (\\n      <Chip\\n        avatar={<Avatar>MB</Avatar>}\\n        label=\\\"Your text\\\"\\n        onClick={Your click func}\\n      />\\n      <Chip\\n        icon={Your icon}\\n        label=\\\"Your text\\\"\\n        onDelete={Your delete func}\\n        color=\\\"Your color\\\"\\n      />\\n\\n    );\";\n  var code = React.createElement(ReactMarkdown, {\n    source: string,\n    renderers: {\n      code: CodeBlock\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  });\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(MyTemplet, {\n    content: output,\n    name: myName,\n    sampleUsage: code,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }));\n}\n\nMyChips.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(MyChips);","map":{"version":3,"sources":["/Users/yimingshan/Workplace/my-app/src/components/contentlist/Components/Chips/chips.js"],"names":["React","PropTypes","withStyles","Avatar","Chip","CodeBlock","ReactMarkdown","MyTemplet","Icons","styles","theme","root","marginTop","marginBottom","display","justifyContent","flexWrap","chip1","margin","spacing","unit","backgroundColor","chip","handleClick","alert","MyChips","props","classes","BlueToothIcon","output","myName","string","code","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport Chip from '@material-ui/core/Chip';\nimport CodeBlock from '../../../';\nimport ReactMarkdown from 'react-markdown';\nimport MyTemplet  from '../../../templet';\nimport * as Icons from '@material-ui/icons';\n\nconst styles = theme => ({\n  root: {\n    marginTop: 50,\n    marginBottom: 50,\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n  },\n  chip1: {\n    margin: theme.spacing.unit,\n    backgroundColor: \"#002f6c\"\n  },\n  chip: {\n    margin: theme.spacing.unit\n}\n});\n\n\nfunction handleClick() {\n  alert('Hi');\n}\n\nfunction MyChips(props) {\n  const { classes } = props;\n  const BlueToothIcon = Icons['BluetoothDisabledTwoTone'];\n  let output = (\n    <div className={classes.root}>\n      <Chip label=\"Chip\" className={classes.chip1} />\n      <Chip\n        avatar={<Avatar>Hi</Avatar>}\n        label=\"Hi\"\n        onClick={handleClick}\n        className={classes.chip}\n      />\n      <Chip\n        icon = {<BlueToothIcon />}\n        label=\"Bluetooth\"\n        className={classes.chip}\n        color=\"#002f6c\"\n        onClick={handleClick}\n      />\n    </div>\n  );\n\n  let myName = \"Chips\";\n\n  let string = `\n\n    import Avatar from '@material-ui/core/Avatar';\n    import Chip from '@material-ui/core/Chip';\n    return (\n      <Chip\n        avatar={<Avatar>MB</Avatar>}\n        label=\"Your text\"\n        onClick={Your click func}\n      />\n      <Chip\n        icon={Your icon}\n        label=\"Your text\"\n        onDelete={Your delete func}\n        color=\"Your color\"\n      />\n\n    );`;\n\n  let code = (<ReactMarkdown source={string} renderers={{ code: CodeBlock }}/>);\n\n  return (\n    <div>\n    <MyTemplet content = {output} name = {myName} sampleUsage = {code}/>\n    </div>\n  );\n}\n\nMyChips.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(MyChips);\n"]},"metadata":{},"sourceType":"module"}