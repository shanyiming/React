{"ast":null,"code":"var _jsxFileName = \"/Users/yimingshan/Workplace/my-app/src/components/contentlist/Components/Tables/tables.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport MyTemplete from '../../../templete';\nimport CodeBlock from '../../../';\nimport ReactMarkdown from 'react-markdown';\nvar CustomTableCell = withStyles(function (theme) {\n  return {\n    head: {\n      backgroundColor: theme.palette.common.black,\n      color: theme.palette.common.white\n    },\n    body: {\n      fontSize: 14,\n      color: theme.palette.primary.dark\n    }\n  };\n})(TableCell);\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      width: '100%',\n      paddingTop: theme.spacing.unit * 3,\n      paddingBottom: 20,\n      overflowX: 'auto'\n    },\n    table: {\n      minWidth: 700\n    },\n    row: {\n      '&:nth-of-type(odd)': {\n        backgroundColor: theme.palette.grey['100']\n      }\n    }\n  };\n};\n\nvar id = 0;\n\nfunction createData(name, calories, fat, carbs, protein) {\n  id += 1;\n  return {\n    id: id,\n    name: name,\n    calories: calories,\n    fat: fat,\n    carbs: carbs,\n    protein: protein\n  };\n}\n\nvar rows = [createData('United States(USA)', 46, 37, 38, 121), createData(' Great Britain (GBR)', 27, 23, 17, 67), createData('China (CHN)', 26, 18, 26, 70), createData('Russia (RUS)', 19, 17, 20, 56), createData('Germany (GER)', 17, 10, 15, 42)];\n\nfunction MyTables(props) {\n  var classes = props.classes;\n  var myName = \"Table\";\n  var output = React.createElement(Paper, {\n    className: classes.root,\n    elevation: 20,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"table-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"2016 Summer Olympics Medal Table (ranked by gold metals)\")), React.createElement(Table, {\n    className: classes.table,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(CustomTableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Nations or Regions\"), React.createElement(CustomTableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Gold\"), React.createElement(CustomTableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Silver\"), React.createElement(CustomTableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Bronze\"), React.createElement(CustomTableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Total\"))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, rows.map(function (row) {\n    return React.createElement(TableRow, {\n      className: classes.row,\n      key: row.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(CustomTableCell, {\n      component: \"th\",\n      scope: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, row.name), React.createElement(CustomTableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, row.calories), React.createElement(CustomTableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, row.fat), React.createElement(CustomTableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, row.carbs), React.createElement(CustomTableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, row.protein));\n  }))));\n  var string = \"\\n    import Table from '@material-ui/core/Table';\\n\\n      <Table>\\n        <TableHead>\\n          <TableRow>\\n          {Your head}\\n          </TableRow>\\n        </TableHead>\\n       <TableBody>\\n         {inputData}\\n       </TableBody>\\n     </Table>\";\n  var code = React.createElement(ReactMarkdown, {\n    source: string,\n    renderers: {\n      code: CodeBlock\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  });\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(MyTemplete, {\n    content: output,\n    name: myName,\n    sampleUsage: code,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }));\n}\n\nMyTables.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(MyTables);","map":{"version":3,"sources":["/Users/yimingshan/Workplace/my-app/src/components/contentlist/Components/Tables/tables.js"],"names":["React","PropTypes","withStyles","Table","TableBody","TableCell","TableHead","TableRow","Paper","MyTemplete","CodeBlock","ReactMarkdown","CustomTableCell","theme","head","backgroundColor","palette","common","black","color","white","body","fontSize","primary","dark","styles","root","width","paddingTop","spacing","unit","paddingBottom","overflowX","table","minWidth","row","grey","id","createData","name","calories","fat","carbs","protein","rows","MyTables","props","classes","myName","output","map","string","code","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport MyTemplete  from '../../../templete';\nimport CodeBlock from '../../../';\nimport ReactMarkdown from 'react-markdown';\n\nconst CustomTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n    color: theme.palette.primary.dark\n  },\n}))(TableCell);\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    paddingTop: theme.spacing.unit * 3,\n    paddingBottom: 20,\n    overflowX: 'auto',\n  },\n  table: {\n    minWidth: 700,\n  },\n  row: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.grey['100'],\n    },\n  },\n});\n\nlet id = 0;\nfunction createData(name, calories, fat, carbs, protein) {\n  id += 1;\n  return { id, name, calories, fat, carbs, protein };\n}\n\nconst rows = [\n  createData('United States(USA)', 46, 37, 38, 121),\n  createData(' Great Britain (GBR)', 27, 23, 17, 67),\n  createData('China (CHN)', 26, 18, 26, 70),\n  createData('Russia (RUS)', 19, 17, 20, 56),\n  createData('Germany (GER)', 17, 10, 15, 42),\n];\n\nfunction MyTables(props) {\n  const { classes } = props;\n  let myName = \"Table\";\n  let output = (<Paper className={classes.root} elevation={20}>\n      <h1 className = \"table-title\"><b>2016 Summer Olympics Medal Table (ranked by gold metals)</b></h1>\n      <Table className={classes.table}>\n        <TableHead>\n          <TableRow>\n            <CustomTableCell>Nations or Regions</CustomTableCell>\n            <CustomTableCell align=\"right\">Gold</CustomTableCell>\n            <CustomTableCell align=\"right\">Silver</CustomTableCell>\n            <CustomTableCell align=\"right\">Bronze</CustomTableCell>\n            <CustomTableCell align=\"right\">Total</CustomTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map(row => (\n            <TableRow className = {classes.row} key={row.id}>\n              <CustomTableCell component=\"th\" scope=\"row\">\n                {row.name}\n              </CustomTableCell>\n              <CustomTableCell align=\"right\">{row.calories}</CustomTableCell>\n              <CustomTableCell align=\"right\">{row.fat}</CustomTableCell>\n              <CustomTableCell align=\"right\">{row.carbs}</CustomTableCell>\n              <CustomTableCell align=\"right\">{row.protein}</CustomTableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </Paper>);\n\n    let string = `\n    import Table from '@material-ui/core/Table';\n\n      <Table>\n        <TableHead>\n          <TableRow>\n          {Your head}\n          </TableRow>\n        </TableHead>\n       <TableBody>\n         {inputData}\n       </TableBody>\n     </Table>`;\n\n    let code = (<ReactMarkdown source={string} renderers={{ code: CodeBlock }}/>);\n\n    return(\n      <div>\n      <MyTemplete content = {output} name = {myName} sampleUsage = {code}/>\n      </div>\n    );\n\n}\n\nMyTables.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(MyTables);\n"]},"metadata":{},"sourceType":"module"}