{"ast":null,"code":"import _classCallCheck from \"/Users/yimingshan/Workplace/my-app1/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/yimingshan/Workplace/my-app1/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/yimingshan/Workplace/my-app1/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/yimingshan/Workplace/my-app1/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/yimingshan/Workplace/my-app1/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/yimingshan/Workplace/my-app1/src/components/contentlist/Charts/Scatterplot/scatterplot.js\";\nimport React, { Component } from 'react';\nimport MyTemplete from '../../../templete';\nimport { XYPlot, XAxis, YAxis, HorizontalGridLines, VerticalGridLines, MarkSeries } from 'react-vis';\nimport CodeBlock from '../../../';\nimport ReactMarkdown from 'react-markdown';\n\nvar MyScatterplot =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MyScatterplot, _Component);\n\n  function MyScatterplot() {\n    _classCallCheck(this, MyScatterplot);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MyScatterplot).apply(this, arguments));\n  }\n\n  _createClass(MyScatterplot, [{\n    key: \"renderScatterplot\",\n    value: function renderScatterplot() {\n      var data = [{\n        x: 0,\n        y: 8,\n        size: 12\n      }, {\n        x: 1,\n        y: 5,\n        size: 10\n      }, {\n        x: 2,\n        y: 4,\n        size: 5\n      }, {\n        x: 2,\n        y: 1,\n        size: 10\n      }, {\n        x: 3,\n        y: 9,\n        size: 5\n      }, {\n        x: 4,\n        y: 1,\n        size: 10\n      }, {\n        x: 4,\n        y: 4,\n        size: 15\n      }, {\n        x: 5,\n        y: 7,\n        size: 10\n      }, {\n        x: 6,\n        y: 6,\n        size: 10\n      }, {\n        x: 7,\n        y: 3,\n        size: 5\n      }, {\n        x: 8,\n        y: 2,\n        size: 10\n      }, {\n        x: 8,\n        y: 6,\n        size: 5\n      }, {\n        x: 9,\n        y: 8,\n        size: 12\n      }, {\n        x: 10,\n        y: 0,\n        size: 5\n      }, {\n        x: 10,\n        y: 5,\n        size: 10\n      }, {\n        x: 3,\n        y: 3,\n        size: 5\n      }, {\n        x: 6,\n        y: 10,\n        size: 15\n      }, {\n        x: 0,\n        y: 2,\n        size: 5\n      }];\n      return React.createElement(\"div\", {\n        className: \"scatterplot-display\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(XYPlot, {\n        margin: {\n          Bottom: 20,\n          top: 30\n        },\n        height: 700,\n        width: 700,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(VerticalGridLines, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }), React.createElement(HorizontalGridLines, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }), React.createElement(XAxis, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }), React.createElement(YAxis, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }), React.createElement(MarkSeries, {\n        data: data,\n        sizeRange: [5, 15],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var output = this.renderScatterplot();\n      var myName = \"Scatterplot\";\n      var string = \"\\n    import {XYPlot, XAxis, YAxis, HorizontalGridLines, VerticalGridLines, MarkSeries} from 'react-vis';\\n\\n    const data = [\\n      {x: 0, y: 8, size: 15},\\n      {x: 1, y: 5, size: 10},\\n      {x: 2, y: 4, size: 5},\\n      {x: 3, y: 9, size: 5},\\n      {x: 4, y: 1, size: 10},\\n      {x: 5, y: 7, size: 10},\\n      {x: 6, y: 6, size: 10},\\n      {x: 7, y: 3, size: 5},\\n    ];\\n    return (\\n      <div>\\n        <XYPlot height={500} width= {500}>\\n          <VerticalGridLines />\\n          <HorizontalGridLines />\\n          <XAxis />\\n          <YAxis />\\n          <MarkSeries data={data} sizeRange={[5, 15]}/>\\n        </XYPlot>\\n      </div>\\n    ); \";\n      var code = React.createElement(ReactMarkdown, {\n        source: string,\n        renderers: {\n          code: CodeBlock\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(MyTemplete, {\n        content: output,\n        name: myName,\n        sampleUsage: code,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return MyScatterplot;\n}(Component);\n\nexport default MyScatterplot;","map":{"version":3,"sources":["/Users/yimingshan/Workplace/my-app1/src/components/contentlist/Charts/Scatterplot/scatterplot.js"],"names":["React","Component","MyTemplete","XYPlot","XAxis","YAxis","HorizontalGridLines","VerticalGridLines","MarkSeries","CodeBlock","ReactMarkdown","MyScatterplot","data","x","y","size","Bottom","top","output","renderScatterplot","myName","string","code"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAwB,mBAAxB;AACA,SAAQC,MAAR,EAAgBC,KAAhB,EAAuBC,KAAvB,EAA8BC,mBAA9B,EAAmDC,iBAAnD,EAAsEC,UAAtE,QAAuF,WAAvF;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;;IAEMC,a;;;;;;;;;;;;;wCAIJ;AACE,UAAMC,IAAI,GAAG,CACX;AAACC,QAAAA,CAAC,EAAE,CAAJ;AAAOC,QAAAA,CAAC,EAAE,CAAV;AAAaC,QAAAA,IAAI,EAAE;AAAnB,OADW,EAEX;AAACF,QAAAA,CAAC,EAAE,CAAJ;AAAOC,QAAAA,CAAC,EAAE,CAAV;AAAaC,QAAAA,IAAI,EAAE;AAAnB,OAFW,EAGX;AAACF,QAAAA,CAAC,EAAE,CAAJ;AAAOC,QAAAA,CAAC,EAAE,CAAV;AAAaC,QAAAA,IAAI,EAAE;AAAnB,OAHW,EAIX;AAACF,QAAAA,CAAC,EAAE,CAAJ;AAAOC,QAAAA,CAAC,EAAE,CAAV;AAAaC,QAAAA,IAAI,EAAE;AAAnB,OAJW,EAKX;AAACF,QAAAA,CAAC,EAAE,CAAJ;AAAOC,QAAAA,CAAC,EAAE,CAAV;AAAaC,QAAAA,IAAI,EAAE;AAAnB,OALW,EAMX;AAACF,QAAAA,CAAC,EAAE,CAAJ;AAAOC,QAAAA,CAAC,EAAE,CAAV;AAAaC,QAAAA,IAAI,EAAE;AAAnB,OANW,EAOX;AAACF,QAAAA,CAAC,EAAE,CAAJ;AAAOC,QAAAA,CAAC,EAAE,CAAV;AAAaC,QAAAA,IAAI,EAAE;AAAnB,OAPW,EAQX;AAACF,QAAAA,CAAC,EAAE,CAAJ;AAAOC,QAAAA,CAAC,EAAE,CAAV;AAAaC,QAAAA,IAAI,EAAE;AAAnB,OARW,EASX;AAACF,QAAAA,CAAC,EAAE,CAAJ;AAAOC,QAAAA,CAAC,EAAE,CAAV;AAAaC,QAAAA,IAAI,EAAE;AAAnB,OATW,EAUX;AAACF,QAAAA,CAAC,EAAE,CAAJ;AAAOC,QAAAA,CAAC,EAAE,CAAV;AAAaC,QAAAA,IAAI,EAAE;AAAnB,OAVW,EAWX;AAACF,QAAAA,CAAC,EAAE,CAAJ;AAAOC,QAAAA,CAAC,EAAE,CAAV;AAAaC,QAAAA,IAAI,EAAE;AAAnB,OAXW,EAYX;AAACF,QAAAA,CAAC,EAAE,CAAJ;AAAOC,QAAAA,CAAC,EAAE,CAAV;AAAaC,QAAAA,IAAI,EAAE;AAAnB,OAZW,EAaX;AAACF,QAAAA,CAAC,EAAE,CAAJ;AAAOC,QAAAA,CAAC,EAAE,CAAV;AAAaC,QAAAA,IAAI,EAAE;AAAnB,OAbW,EAcX;AAACF,QAAAA,CAAC,EAAE,EAAJ;AAAQC,QAAAA,CAAC,EAAE,CAAX;AAAcC,QAAAA,IAAI,EAAE;AAApB,OAdW,EAeX;AAACF,QAAAA,CAAC,EAAE,EAAJ;AAAQC,QAAAA,CAAC,EAAE,CAAX;AAAcC,QAAAA,IAAI,EAAE;AAApB,OAfW,EAgBX;AAACF,QAAAA,CAAC,EAAE,CAAJ;AAAOC,QAAAA,CAAC,EAAE,CAAV;AAAaC,QAAAA,IAAI,EAAE;AAAnB,OAhBW,EAiBX;AAACF,QAAAA,CAAC,EAAE,CAAJ;AAAOC,QAAAA,CAAC,EAAE,EAAV;AAAcC,QAAAA,IAAI,EAAE;AAApB,OAjBW,EAkBX;AAACF,QAAAA,CAAC,EAAE,CAAJ;AAAOC,QAAAA,CAAC,EAAE,CAAV;AAAaC,QAAAA,IAAI,EAAE;AAAnB,OAlBW,CAAb;AAoBA,aACE;AAAK,QAAA,SAAS,EAAG,qBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,MAAM,EAAE;AAACC,UAAAA,MAAM,EAAE,EAAT;AAAaC,UAAAA,GAAG,EAAE;AAAlB,SAAhB;AAAuC,QAAA,MAAM,EAAE,GAA/C;AAAoD,QAAA,KAAK,EAAG,GAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,EAIE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,EAKE,oBAAC,UAAD;AAAY,QAAA,IAAI,EAAEL,IAAlB;AAAwB,QAAA,SAAS,EAAE,CAAC,CAAD,EAAI,EAAJ,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,CADF,CADF;AAWD;;;6BAED;AACE,UAAIM,MAAM,GAAG,KAAKC,iBAAL,EAAb;AACA,UAAIC,MAAM,GAAG,aAAb;AACA,UAAIC,MAAM,ypBAAV;AAwBA,UAAIC,IAAI,GAAI,oBAAC,aAAD;AAAe,QAAA,MAAM,EAAED,MAAvB;AAA+B,QAAA,SAAS,EAAE;AAAEC,UAAAA,IAAI,EAAEb;AAAR,SAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAZ;AACA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAIS,MAAvB;AAA+B,QAAA,IAAI,EAAIE,MAAvC;AAA+C,QAAA,WAAW,EAAIE,IAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CADF;AAKD;;;;EAvEyBrB,S;;AA0E5B,eAAeU,aAAf","sourcesContent":["import React, { Component } from 'react';\nimport MyTemplete  from '../../../templete';\nimport {XYPlot, XAxis, YAxis, HorizontalGridLines, VerticalGridLines, MarkSeries} from 'react-vis';\nimport CodeBlock from '../../../';\nimport ReactMarkdown from 'react-markdown';\n\nclass MyScatterplot extends Component\n{\n\n  renderScatterplot()\n  {\n    const data = [\n      {x: 0, y: 8, size: 12},\n      {x: 1, y: 5, size: 10},\n      {x: 2, y: 4, size: 5},\n      {x: 2, y: 1, size: 10},\n      {x: 3, y: 9, size: 5},\n      {x: 4, y: 1, size: 10},\n      {x: 4, y: 4, size: 15},\n      {x: 5, y: 7, size: 10},\n      {x: 6, y: 6, size: 10},\n      {x: 7, y: 3, size: 5},\n      {x: 8, y: 2, size: 10},\n      {x: 8, y: 6, size: 5},\n      {x: 9, y: 8, size: 12},\n      {x: 10, y: 0, size: 5},\n      {x: 10, y: 5, size: 10},\n      {x: 3, y: 3, size: 5},\n      {x: 6, y: 10, size: 15},\n      {x: 0, y: 2, size: 5}\n    ];\n    return (\n      <div className = \"scatterplot-display\">\n        <XYPlot margin={{Bottom: 20, top: 30}} height={700} width= {700}>\n          <VerticalGridLines />\n          <HorizontalGridLines />\n          <XAxis />\n          <YAxis />\n          <MarkSeries data={data} sizeRange={[5, 15]}/>\n        </XYPlot>\n      </div>\n    );\n  }\n  render()\n  {\n    let output = this.renderScatterplot();\n    let myName = \"Scatterplot\";\n    let string = `\n    import {XYPlot, XAxis, YAxis, HorizontalGridLines, VerticalGridLines, MarkSeries} from 'react-vis';\n\n    const data = [\n      {x: 0, y: 8, size: 15},\n      {x: 1, y: 5, size: 10},\n      {x: 2, y: 4, size: 5},\n      {x: 3, y: 9, size: 5},\n      {x: 4, y: 1, size: 10},\n      {x: 5, y: 7, size: 10},\n      {x: 6, y: 6, size: 10},\n      {x: 7, y: 3, size: 5},\n    ];\n    return (\n      <div>\n        <XYPlot height={500} width= {500}>\n          <VerticalGridLines />\n          <HorizontalGridLines />\n          <XAxis />\n          <YAxis />\n          <MarkSeries data={data} sizeRange={[5, 15]}/>\n        </XYPlot>\n      </div>\n    ); `;\n    let code = (<ReactMarkdown source={string} renderers={{ code: CodeBlock }}/>);\n    return(\n      <div>\n      <MyTemplete content = {output} name = {myName} sampleUsage = {code}/>\n      </div>\n    );\n  }\n}\n\nexport default MyScatterplot;\n"]},"metadata":{},"sourceType":"module"}