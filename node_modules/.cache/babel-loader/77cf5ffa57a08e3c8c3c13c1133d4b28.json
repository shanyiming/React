{"ast":null,"code":"import _classCallCheck from \"/Users/yimingshan/Workplace/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/yimingshan/Workplace/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/yimingshan/Workplace/my-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/yimingshan/Workplace/my-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/yimingshan/Workplace/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/yimingshan/Workplace/my-app/src/components/contentlist/Icon/icon.js\";\nimport React from 'react';\nimport * as Icons from '@material-ui/icons';\nimport Paper from '@material-ui/core/Paper';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport CodeBlock from '../../';\nimport ReactMarkdown from 'react-markdown';\n\nvar MyIcon =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MyIcon, _React$Component);\n\n  function MyIcon(props) {\n    var _this;\n\n    _classCallCheck(this, MyIcon);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MyIcon).call(this, props));\n\n    _this.onSelect = function (key) {\n      _this.setState({\n        selected: key\n      });\n    };\n\n    _this.handleClose = function () {\n      _this.setState({\n        selected: null\n      });\n    };\n\n    _this.renderOneIcon = function (icon) {\n      var MyIcon = Icons[icon];\n      return React.createElement(\"li\", {\n        className: \"one-icon-display\",\n        onClick: function onClick() {\n          return _this.onSelect(icon);\n        },\n        key: icon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(MyIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }));\n    };\n\n    _this.renderDialog = function () {\n      var selected = _this.state.selected;\n      if (!selected) return;\n      var SingleIcon = Icons[selected];\n      var string = \"\\n    import {Icons} from '@material-ui/icons/';\\n    const IconComponent = Icons['\".concat(selected, \"'];\\n    return <div><IconComponent /></div>;\\n    \");\n      var code = React.createElement(ReactMarkdown, {\n        source: string,\n        renderers: {\n          code: CodeBlock\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      });\n      return React.createElement(Dialog, {\n        open: !!selected,\n        onClose: _this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        id: \"alert-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, selected, \" Icon \", React.createElement(SingleIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }), \" Sample  Usage\"), React.createElement(DialogContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, code), React.createElement(Button, {\n        onClick: _this.handleClose,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Close\"));\n    };\n\n    _this.state = {\n      selected: null\n    };\n    return _this;\n  }\n\n  _createClass(MyIcon, [{\n    key: \"render\",\n    value: function render() {\n      var output = [];\n\n      for (var oneIcon in Icons) {\n        output.push(this.renderOneIcon(oneIcon));\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        className: \"icon-paper\",\n        elevation: 20,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"icon-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Click on Icons to Check Sample Usage\"), React.createElement(\"ul\", {\n        className: \"icons-display\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, output), this.renderDialog()));\n    }\n  }]);\n\n  return MyIcon;\n}(React.Component);\n\nexport default MyIcon;","map":{"version":3,"sources":["/Users/yimingshan/Workplace/my-app/src/components/contentlist/Icon/icon.js"],"names":["React","Icons","Paper","Dialog","DialogContent","DialogTitle","Button","CodeBlock","ReactMarkdown","MyIcon","props","onSelect","key","setState","selected","handleClose","renderOneIcon","icon","renderDialog","state","SingleIcon","string","code","output","oneIcon","push","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,KAAZ,MAAuB,oBAAvB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,QAAtB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;;IAGMC,M;;;;;AAEJ,kBAAYC,KAAZ,EACA;AAAA;;AAAA;;AACE,gFAAMA,KAAN;;AADF,UAOAC,QAPA,GAOS,UAACC,GAAD,EACT;AACE,YAAKC,QAAL,CAAc;AAACC,QAAAA,QAAQ,EAAEF;AAAX,OAAd;AACD,KAVD;;AAAA,UAYAG,WAZA,GAYc,YAAM;AAClB,YAAKF,QAAL,CAAc;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAAd;AACD,KAdD;;AAAA,UAiBAE,aAjBA,GAiBgB,UAACC,IAAD,EAChB;AACE,UAAIR,MAAM,GAAGR,KAAK,CAACgB,IAAD,CAAlB;AACA,aACI;AAAI,QAAA,SAAS,EAAG,kBAAhB;AAAmC,QAAA,OAAO,EAAE;AAAA,iBAAI,MAAKN,QAAL,CAAcM,IAAd,CAAJ;AAAA,SAA5C;AAAqE,QAAA,GAAG,EAAIA,IAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADJ;AAKD,KAzBD;;AAAA,UA2BAC,YA3BA,GA2Ba,YACb;AAAA,UACSJ,QADT,GACqB,MAAKK,KAD1B,CACSL,QADT;AAEE,UAAG,CAACA,QAAJ,EAAc;AACd,UAAMM,UAAU,GAAGnB,KAAK,CAACa,QAAD,CAAxB;AACA,UAAMO,MAAM,gGAEmBP,QAFnB,wDAAZ;AAKA,UAAIQ,IAAI,GAAI,oBAAC,aAAD;AAAe,QAAA,MAAM,EAAED,MAAvB;AAA+B,QAAA,SAAS,EAAE;AAAEC,UAAAA,IAAI,EAAEf;AAAR,SAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAZ;AACA,aACE,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAE,CAAC,CAACO,QAAhB;AAA0B,QAAA,OAAO,EAAE,MAAKC,WAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,WAAD;AAAa,QAAA,EAAE,EAAC,oBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGD,QADH,EAEG,QAFH,EAGE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,EAIG,gBAJH,CADF,EAOE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGQ,IADH,CAPF,EAWI,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,MAAKP,WAAtB;AAAmC,QAAA,KAAK,EAAC,SAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAXJ,CADF;AAiBD,KAvDD;;AAEE,UAAKI,KAAL,GAAa;AACXL,MAAAA,QAAQ,EAAG;AADA,KAAb;AAFF;AAKC;;;;6BAqDD;AACE,UAAIS,MAAM,GAAG,EAAb;;AACA,WAAI,IAAIC,OAAR,IAAmBvB,KAAnB,EACA;AACEsB,QAAAA,MAAM,CAACE,IAAP,CAAY,KAAKT,aAAL,CAAmBQ,OAAnB,CAAZ;AACD;;AACD,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAG,YAAnB;AAAgC,QAAA,SAAS,EAAI,EAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAG,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDADF,EAEE;AAAI,QAAA,SAAS,EAAG,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiCD,MAAjC,CAFF,EAGG,KAAKL,YAAL,EAHH,CADF,CADF;AASD;;;;EA5EkBlB,KAAK,CAAC0B,S;;AAgF3B,eAAejB,MAAf","sourcesContent":["import React from 'react';\nimport * as Icons from '@material-ui/icons';\nimport Paper from '@material-ui/core/Paper';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport CodeBlock from '../../';\nimport ReactMarkdown from 'react-markdown';\n\n\nclass MyIcon extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n    this.state = {\n      selected : null\n    };\n  }\n\n  onSelect=(key)=>\n  {\n    this.setState({selected: key});\n  }\n\n  handleClose = () => {\n    this.setState({ selected: null });\n  };\n\n\n  renderOneIcon = (icon)=>\n  {\n    let MyIcon = Icons[icon];\n    return(\n        <li className = \"one-icon-display\" onClick={()=>this.onSelect(icon)} key = {icon}>\n          <MyIcon />\n        </li>\n    );\n  }\n\n  renderDialog=()=>\n  {\n    const {selected} = this.state;\n    if(!selected) return;\n    const SingleIcon = Icons[selected];\n    const string = `\n    import {Icons} from '@material-ui/icons/';\n    const IconComponent = Icons['${selected}'];\n    return <div><IconComponent /></div>;\n    `;\n    let code = (<ReactMarkdown source={string} renderers={{ code: CodeBlock }}/>);\n    return(\n      <Dialog open={!!selected} onClose={this.handleClose}>\n        <DialogTitle id=\"alert-dialog-title\">\n          {selected}\n          {\" Icon \"}\n          <SingleIcon/>\n          {\" Sample  Usage\"}\n        </DialogTitle>\n        <DialogContent>\n          {code}\n        </DialogContent>\n\n          <Button onClick={this.handleClose} color=\"primary\">\n            Close\n          </Button>\n      </Dialog>\n    );\n  }\n\n  render()\n  {\n    let output = [];\n    for(let oneIcon in Icons)\n    {\n      output.push(this.renderOneIcon(oneIcon));\n    }\n    return(\n      <div >\n        <Paper className = \"icon-paper\" elevation = {20}>\n          <h1 className = \"icon-title\">Click on Icons to Check Sample Usage</h1>\n          <ul className = \"icons-display\">{output}</ul>\n          {this.renderDialog()}\n        </Paper>\n      </div>\n    );\n  }\n\n}\n\nexport default MyIcon;\n"]},"metadata":{},"sourceType":"module"}