{"ast":null,"code":"import _classCallCheck from \"/Users/yimingshan/Workplace/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/yimingshan/Workplace/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/yimingshan/Workplace/my-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/yimingshan/Workplace/my-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/yimingshan/Workplace/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/yimingshan/Workplace/my-app/src/components/contentlist/Charts/StackedBar/stackedBar.js\";\nimport React, { Component } from 'react';\nimport MyTemplete from '../../../templete';\nimport { XYPlot, XAxis, YAxis, HorizontalGridLines, VerticalGridLines, VerticalBarSeries } from 'react-vis';\nimport CodeBlock from '../../../';\nimport ReactMarkdown from 'react-markdown';\n\nvar MyStackedBar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MyStackedBar, _Component);\n\n  function MyStackedBar() {\n    _classCallCheck(this, MyStackedBar);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MyStackedBar).apply(this, arguments));\n  }\n\n  _createClass(MyStackedBar, [{\n    key: \"renderStackedBar\",\n    value: function renderStackedBar() {\n      var data1 = [{\n        x: 'Apple',\n        y: 20\n      }, {\n        x: 'Banana',\n        y: 10\n      }, {\n        x: 'Orange',\n        y: 5\n      }, {\n        x: 'peach',\n        y: 8\n      }, {\n        x: 'Lime',\n        y: 15\n      }];\n      var data2 = [{\n        x: 'Apple',\n        y: 10\n      }, {\n        x: 'Banana',\n        y: 20\n      }, {\n        x: 'Orange',\n        y: 10\n      }, {\n        x: 'peach',\n        y: 20\n      }, {\n        x: 'Lime',\n        y: 5\n      }];\n      var data3 = [{\n        x: 'Apple',\n        y: 20\n      }, {\n        x: 'Banana',\n        y: 10\n      }, {\n        x: 'Orange',\n        y: 10\n      }, {\n        x: 'peach',\n        y: 12\n      }, {\n        x: 'Lime',\n        y: 5\n      }];\n      return React.createElement(\"div\", {\n        className: \"stack-display\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(XYPlot, {\n        margin: {\n          Bottom: 70,\n          top: 30\n        },\n        xType: \"ordinal\",\n        width: 700,\n        height: 700,\n        stackBy: \"y\",\n        yDomain: [0, 50],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(VerticalGridLines, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }), React.createElement(HorizontalGridLines, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }), React.createElement(XAxis, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }), React.createElement(YAxis, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }), React.createElement(VerticalBarSeries, {\n        data: data1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }), React.createElement(VerticalBarSeries, {\n        data: data2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }), React.createElement(VerticalBarSeries, {\n        data: data3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var output = this.renderStackedBar();\n      var myName = \"Stacked Bar\";\n      var string = \"\\n    import {XYPlot, XAxis, YAxis, HorizontalGridLines, VerticalGridLines,VerticalBarSeries} from 'react-vis';\\n\\n    const data1 = [\\n      {x: 'Apple', y: 20},\\n      {x: 'Banana', y: 10},\\n      {x: 'Orange', y: 5}\\n    ];\\n\\n    const data2 = [\\n      {x: 'Apple', y: 10},\\n      {x: 'Banana', y: 20},\\n      {x: 'Orange', y: 10}\\n    ];\\n\\n    const data3 = [\\n      {x: 'Apple', y: 20},\\n      {x: 'Banana', y: 10},\\n      {x: 'Orange', y: 10}\\n    ];\\n\\n    return (\\n      <XYPlot margin={{Bottom: 70}} xType=\\\"ordinal\\\" width={500} height={500} stackBy=\\\"y\\\">\\n        <VerticalGridLines />\\n        <HorizontalGridLines />\\n        <XAxis  />\\n        <YAxis />\\n        <VerticalBarSeries\\n          data={data1}\\n        />\\n        <VerticalBarSeries\\n          data={data2}\\n        />\\n        <VerticalBarSeries\\n          data={data3}\\n        />\\n      </XYPlot>\\n    );\";\n      var code = React.createElement(ReactMarkdown, {\n        source: string,\n        renderers: {\n          code: CodeBlock\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(MyTemplete, {\n        content: output,\n        name: myName,\n        sampleUsage: code,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return MyStackedBar;\n}(Component);\n\nexport default MyStackedBar;","map":{"version":3,"sources":["/Users/yimingshan/Workplace/my-app/src/components/contentlist/Charts/StackedBar/stackedBar.js"],"names":["React","Component","MyTemplete","XYPlot","XAxis","YAxis","HorizontalGridLines","VerticalGridLines","VerticalBarSeries","CodeBlock","ReactMarkdown","MyStackedBar","data1","x","y","data2","data3","Bottom","top","output","renderStackedBar","myName","string","code"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAwB,mBAAxB;AACA,SAAQC,MAAR,EAAgBC,KAAhB,EAAuBC,KAAvB,EAA8BC,mBAA9B,EAAmDC,iBAAnD,EAAqEC,iBAArE,QAA6F,WAA7F;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;;IAEMC,Y;;;;;;;;;;;;;uCAIJ;AACE,UAAMC,KAAK,GAAG,CACZ;AAACC,QAAAA,CAAC,EAAE,OAAJ;AAAaC,QAAAA,CAAC,EAAE;AAAhB,OADY,EAEZ;AAACD,QAAAA,CAAC,EAAE,QAAJ;AAAcC,QAAAA,CAAC,EAAE;AAAjB,OAFY,EAGZ;AAACD,QAAAA,CAAC,EAAE,QAAJ;AAAcC,QAAAA,CAAC,EAAE;AAAjB,OAHY,EAIZ;AAACD,QAAAA,CAAC,EAAE,OAAJ;AAAaC,QAAAA,CAAC,EAAE;AAAhB,OAJY,EAKZ;AAACD,QAAAA,CAAC,EAAE,MAAJ;AAAYC,QAAAA,CAAC,EAAE;AAAf,OALY,CAAd;AAQA,UAAMC,KAAK,GAAG,CACZ;AAACF,QAAAA,CAAC,EAAE,OAAJ;AAAaC,QAAAA,CAAC,EAAE;AAAhB,OADY,EAEZ;AAACD,QAAAA,CAAC,EAAE,QAAJ;AAAcC,QAAAA,CAAC,EAAE;AAAjB,OAFY,EAGZ;AAACD,QAAAA,CAAC,EAAE,QAAJ;AAAcC,QAAAA,CAAC,EAAE;AAAjB,OAHY,EAIZ;AAACD,QAAAA,CAAC,EAAE,OAAJ;AAAaC,QAAAA,CAAC,EAAE;AAAhB,OAJY,EAKZ;AAACD,QAAAA,CAAC,EAAE,MAAJ;AAAYC,QAAAA,CAAC,EAAE;AAAf,OALY,CAAd;AAQA,UAAME,KAAK,GAAG,CACZ;AAACH,QAAAA,CAAC,EAAE,OAAJ;AAAaC,QAAAA,CAAC,EAAE;AAAhB,OADY,EAEZ;AAACD,QAAAA,CAAC,EAAE,QAAJ;AAAcC,QAAAA,CAAC,EAAE;AAAjB,OAFY,EAGZ;AAACD,QAAAA,CAAC,EAAE,QAAJ;AAAcC,QAAAA,CAAC,EAAE;AAAjB,OAHY,EAIZ;AAACD,QAAAA,CAAC,EAAE,OAAJ;AAAaC,QAAAA,CAAC,EAAE;AAAhB,OAJY,EAKZ;AAACD,QAAAA,CAAC,EAAE,MAAJ;AAAYC,QAAAA,CAAC,EAAE;AAAf,OALY,CAAd;AAQA,aACE;AAAK,QAAA,SAAS,EAAG,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,MAAM,EAAE;AAACG,UAAAA,MAAM,EAAE,EAAT;AAAaC,UAAAA,GAAG,EAAE;AAAlB,SAAhB;AAAuC,QAAA,KAAK,EAAC,SAA7C;AAAuD,QAAA,KAAK,EAAE,GAA9D;AAAmE,QAAA,MAAM,EAAE,GAA3E;AAAgF,QAAA,OAAO,EAAC,GAAxF;AAA4F,QAAA,OAAO,EAAE,CAAC,CAAD,EAAI,EAAJ,CAArG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,EAIE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,EAKE,oBAAC,iBAAD;AACE,QAAA,IAAI,EAAEN,KADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,EAQE,oBAAC,iBAAD;AACE,QAAA,IAAI,EAAEG,KADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARF,EAWE,oBAAC,iBAAD;AACE,QAAA,IAAI,EAAEC,KADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXF,CADF,CADF;AAmBD;;;6BAED;AACE,UAAIG,MAAM,GAAG,KAAKC,gBAAL,EAAb;AACA,UAAIC,MAAM,GAAG,aAAb;AACA,UAAIC,MAAM,83BAAV;AAsCA,UAAIC,IAAI,GAAI,oBAAC,aAAD;AAAe,QAAA,MAAM,EAAED,MAAvB;AAA+B,QAAA,SAAS,EAAE;AAAEC,UAAAA,IAAI,EAAEd;AAAR,SAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAZ;AACA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAIU,MAAvB;AAA+B,QAAA,IAAI,EAAIE,MAAvC;AAA+C,QAAA,WAAW,EAAIE,IAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CADF;AAKD;;;;EAjGwBtB,S;;AAoG3B,eAAeU,YAAf","sourcesContent":["import React, { Component } from 'react';\nimport MyTemplete  from '../../../templete';\nimport {XYPlot, XAxis, YAxis, HorizontalGridLines, VerticalGridLines,VerticalBarSeries} from 'react-vis';\nimport CodeBlock from '../../../';\nimport ReactMarkdown from 'react-markdown';\n\nclass MyStackedBar extends Component\n{\n\n  renderStackedBar()\n  {\n    const data1 = [\n      {x: 'Apple', y: 20},\n      {x: 'Banana', y: 10},\n      {x: 'Orange', y: 5},\n      {x: 'peach', y: 8},\n      {x: 'Lime', y: 15}\n    ];\n\n    const data2 = [\n      {x: 'Apple', y: 10},\n      {x: 'Banana', y: 20},\n      {x: 'Orange', y: 10},\n      {x: 'peach', y: 20},\n      {x: 'Lime', y: 5}\n    ];\n\n    const data3 = [\n      {x: 'Apple', y: 20},\n      {x: 'Banana', y: 10},\n      {x: 'Orange', y: 10},\n      {x: 'peach', y: 12},\n      {x: 'Lime', y: 5}\n    ];\n\n    return (\n      <div className = \"stack-display\">\n        <XYPlot margin={{Bottom: 70, top: 30}} xType=\"ordinal\" width={700} height={700} stackBy=\"y\" yDomain={[0, 50]}>\n          <VerticalGridLines />\n          <HorizontalGridLines />\n          <XAxis  />\n          <YAxis />\n          <VerticalBarSeries\n            data={data1}\n          />\n          <VerticalBarSeries\n            data={data2}\n          />\n          <VerticalBarSeries\n            data={data3}\n          />\n        </XYPlot>\n      </div>\n    );\n  }\n  render()\n  {\n    let output = this.renderStackedBar();\n    let myName = \"Stacked Bar\";\n    let string = `\n    import {XYPlot, XAxis, YAxis, HorizontalGridLines, VerticalGridLines,VerticalBarSeries} from 'react-vis';\n\n    const data1 = [\n      {x: 'Apple', y: 20},\n      {x: 'Banana', y: 10},\n      {x: 'Orange', y: 5}\n    ];\n\n    const data2 = [\n      {x: 'Apple', y: 10},\n      {x: 'Banana', y: 20},\n      {x: 'Orange', y: 10}\n    ];\n\n    const data3 = [\n      {x: 'Apple', y: 20},\n      {x: 'Banana', y: 10},\n      {x: 'Orange', y: 10}\n    ];\n\n    return (\n      <XYPlot margin={{Bottom: 70}} xType=\"ordinal\" width={500} height={500} stackBy=\"y\">\n        <VerticalGridLines />\n        <HorizontalGridLines />\n        <XAxis  />\n        <YAxis />\n        <VerticalBarSeries\n          data={data1}\n        />\n        <VerticalBarSeries\n          data={data2}\n        />\n        <VerticalBarSeries\n          data={data3}\n        />\n      </XYPlot>\n    );`;\n    let code = (<ReactMarkdown source={string} renderers={{ code: CodeBlock }}/>);\n    return(\n      <div>\n      <MyTemplete content = {output} name = {myName} sampleUsage = {code}/>\n      </div>\n    );\n  }\n}\n\nexport default MyStackedBar;\n"]},"metadata":{},"sourceType":"module"}