{"ast":null,"code":"var _jsxFileName = \"/Users/yimingshan/Workplace/my-app/src/components/contentlist/Components/SearchField/searchField.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport MyTemplet from '../../../templet';\nimport CodeBlock from '../../../';\nimport ReactMarkdown from 'react-markdown';\nimport Avatar from '@material-ui/core/Avatar';\nimport MicIcon from '@material-ui/icons/Mic';\nvar styles = {\n  root: {\n    padding: '2px 4px',\n    display: 'flex',\n    alignItems: 'center',\n    width: 500,\n    margin: \"auto\",\n    marginTop: \"50px\",\n    marginBottom: \"50px\"\n  },\n  input: {\n    marginLeft: 8,\n    flex: 1\n  },\n  iconButton: {\n    padding: 10,\n    color: \"grey\"\n  },\n  divider: {\n    width: 1,\n    height: \"40px\",\n    marginLeft: 4,\n    marginRight: 4\n  }\n};\n\nfunction MySearchField(props) {\n  var classes = props.classes;\n  var output = React.createElement(Paper, {\n    className: classes.root,\n    elevation: 20,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    className: classes.iconButton,\n    \"aria-label\": \"Menu\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    style: {\n      backgroundColor: '#3E5EE1'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"G\")), React.createElement(InputBase, {\n    className: classes.input,\n    placeholder: \"Search Google\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(IconButton, {\n    className: classes.iconButton,\n    \"aria-label\": \"Search\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(SearchIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  })), React.createElement(Divider, {\n    className: classes.divider,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(IconButton, {\n    color: \"primary\",\n    className: classes.iconButton,\n    \"aria-label\": \"Mic\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(MicIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  })));\n  var myName = \"Search Field\";\n  var string = \"\\n    import React from 'react';\\n    import Paper from '@material-ui/core/Paper';\\n    import InputBase from '@material-ui/core/InputBase';\\n    import IconButton from '@material-ui/core/IconButton';\\n\\n    return (\\n      <Paper elevation={1}>\\n        <IconButton>\\n          <Your Icon />\\n        </IconButton>\\n        <InputBase placeholder=\\\"Your Text\\\" />\\n        <IconButton>\\n          <Your Icon />\\n        </IconButton>\\n      </Paper>\\n    );\";\n  var code = React.createElement(ReactMarkdown, {\n    source: string,\n    renderers: {\n      code: CodeBlock\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  });\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(MyTemplet, {\n    content: output,\n    name: myName,\n    sampleUsage: code,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }));\n}\n\nMySearchField.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(MySearchField);","map":{"version":3,"sources":["/Users/yimingshan/Workplace/my-app/src/components/contentlist/Components/SearchField/searchField.js"],"names":["React","PropTypes","withStyles","Paper","InputBase","Divider","IconButton","SearchIcon","MyTemplet","CodeBlock","ReactMarkdown","Avatar","MicIcon","styles","root","padding","display","alignItems","width","margin","marginTop","marginBottom","input","marginLeft","flex","iconButton","color","divider","height","marginRight","MySearchField","props","classes","output","backgroundColor","myName","string","code","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport MyTemplet  from '../../../templet';\nimport CodeBlock from '../../../';\nimport ReactMarkdown from 'react-markdown';\nimport Avatar from '@material-ui/core/Avatar';\nimport MicIcon from '@material-ui/icons/Mic';\n\n\n\nconst styles = {\n  root: {\n    padding: '2px 4px',\n    display: 'flex',\n    alignItems: 'center',\n    width: 500,\n    margin: \"auto\",\n    marginTop: \"50px\",\n    marginBottom: \"50px\",\n  },\n  input: {\n    marginLeft: 8,\n    flex: 1,\n  },\n  iconButton: {\n    padding: 10,\n    color:\"grey\",\n  },\n  divider: {\n    width: 1,\n    height: \"40px\",\n    marginLeft: 4,\n    marginRight: 4,\n  },\n};\n\nfunction MySearchField(props) {\n  const { classes } = props;\n\n  let output = (\n    <Paper className={classes.root} elevation={20}>\n      <IconButton className={classes.iconButton} aria-label=\"Menu\">\n        <Avatar style={{backgroundColor: '#3E5EE1'}}>G</Avatar>\n      </IconButton>\n      <InputBase className={classes.input} placeholder=\"Search Google\" />\n      <IconButton className={classes.iconButton} aria-label=\"Search\">\n        <SearchIcon />\n      </IconButton>\n      <Divider className={classes.divider} />\n      <IconButton color=\"primary\" className={classes.iconButton} aria-label=\"Mic\">\n        <MicIcon />\n      </IconButton>\n    </Paper>\n  );\n\n  let myName = \"Search Field\";\n  let string = `\n    import React from 'react';\n    import Paper from '@material-ui/core/Paper';\n    import InputBase from '@material-ui/core/InputBase';\n    import IconButton from '@material-ui/core/IconButton';\n\n    return (\n      <Paper elevation={1}>\n        <IconButton>\n          <Your Icon />\n        </IconButton>\n        <InputBase placeholder=\"Your Text\" />\n        <IconButton>\n          <Your Icon />\n        </IconButton>\n      </Paper>\n    );`;\n\n  let code = (<ReactMarkdown source={string} renderers={{ code: CodeBlock }}/>);\n\n  return (\n    <div>\n    <MyTemplet content = {output} name = {myName} sampleUsage = {code}/>\n    </div>\n  );\n}\n\nMySearchField.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(MySearchField);\n"]},"metadata":{},"sourceType":"module"}